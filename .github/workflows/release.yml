name: Android Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Retrieve Version
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printVersionName)"
        id: android_version

      - name: Get version
        run: |
          echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV

      - name: Generate file name env var
        run: |
          VERSION_NAME=${{env.version_name}}
          DATE=$(date +'%d.%m.%Y')
          BRANCH_NAME=${GITHUB_REF##*/}
          MESSAGE=$(cat << EOF
          AllecGallery-debug-${VERSION_NAME}-${BRANCH_NAME}-${DATE}
          EOF)
          echo OUTPUT_NAME=$MESSAGE >> $GITHUB_ENV

      - name: Assemble app debug APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Verify APK existence
        run: |
          echo "Checking if the APK file exists..."
          ls -al ./app/build/outputs/apk/debug/
      - name: Rename APK 
        run:
          mv "./app/build/outputs/apk/debug/app-debug.apk" "./app/build/outputs/apk/debug/${{ env.OUTPUT_NAME }}.apk"
      - name: Verify APK existence
        run: |
          echo "Checking if the APK file exists..."
          ls -al ./app/build/outputs/apk/debug/
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: app/build/outputs/apk/debug/${{ env.OUTPUT_NAME }}.apk
      - name: Release APK
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
             ./app/build/outputs/apk/debug/${{ env.OUTPUT_NAME }}.apk
          name: ${{env.version_name}}
          tag_name: ${{env.version_name}}
          token: ${{ secrets.TOKEN}}
          
